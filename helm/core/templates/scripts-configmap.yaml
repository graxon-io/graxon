apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-graxon-scripts
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/instance: graxon
    app.kubernetes.io/component: core
data:
  wait-for-backends.sh: |-
    #!/bin/bash
    set -o errexit
    set -o pipefail
    set -o nounset

    # Wait for statefulset to be ready
    k8s_wait_for_statefulset() {
        namespace=${1:?namespace is missing}
        statefulset=${2:?statefulset name is missing}
        local -i return_code=0

        echo "Waiting for statefulset ${statefulset} to be successfully rolled out..."
        kubectl rollout status --namespace "$namespace" statefulset "$statefulset" >/dev/null 2>&1 || return_code=$?
        echo "Rollout exit code: '${return_code}'"
        return $return_code
    }

    # Wait for deployment to be ready
    k8s_wait_for_deployment() {
        namespace=${1:?namespace is missing}
        deployment=${2:?deployment name is missing}
        local -i return_code=0

        echo "Waiting for deployment ${deployment} to be successfully rolled out..."
        kubectl rollout status --namespace "$namespace" deployment "$deployment" >/dev/null 2>&1 || return_code=$?
        echo "Rollout exit code: '${return_code}'"
        return $return_code
    }

    # Wait for service to be ready
    k8s_wait_for_deployment {{ .Release.Namespace }} {{ .Release.Name }}-graxon-otel
    k8s_wait_for_statefulset {{ .Release.Namespace }} {{ .Release.Name }}-rabbitmq